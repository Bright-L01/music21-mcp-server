apiVersion: v1
kind: Service
metadata:
  name: music21-mcp-service
  namespace: music21-mcp
  labels:
    app.kubernetes.io/name: music21-mcp-server
    app.kubernetes.io/component: api
spec:
  selector:
    app.kubernetes.io/name: music21-mcp-server
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: music21-data-pvc
  namespace: music21-mcp
  labels:
    app.kubernetes.io/name: music21-mcp-server
    app.kubernetes.io/component: storage
spec:
  accessModes:
  - ReadWriteMany  # Multiple pods can share this volume
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: music21-mcp-server
  namespace: music21-mcp
  labels:
    app.kubernetes.io/name: music21-mcp-server
    app.kubernetes.io/component: api
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: music21-mcp-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: music21-mcp-server
        app.kubernetes.io/component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
        # Force rolling update on config changes
        configmap/checksum: "change-this-to-force-restart"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      serviceAccountName: music21-mcp-sa
      containers:
      - name: music21-mcp
        image: music21-mcp-server:latest  # Replace with your registry
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          protocol: TCP
          name: http
        env:
        # Configuration from ConfigMap
        - name: HOST
          valueFrom:
            configMapKeyRef:
              name: music21-mcp-config
              key: HOST
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: music21-mcp-config
              key: PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: music21-mcp-config
              key: LOG_LEVEL
        - name: PYTHONUNBUFFERED
          valueFrom:
            configMapKeyRef:
              name: music21-mcp-config
              key: PYTHONUNBUFFERED
        
        # Redis configuration
        - name: REDIS_URL
          value: "redis://redis-service:6379/0"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-config
              key: redis-password
              optional: true
        
        # OAuth2 configuration
        - name: OAUTH2_ACCESS_TOKEN_EXPIRE_MINUTES
          valueFrom:
            configMapKeyRef:
              name: music21-mcp-config
              key: OAUTH2_ACCESS_TOKEN_EXPIRE_MINUTES
        - name: OAUTH2_REFRESH_TOKEN_EXPIRE_DAYS
          valueFrom:
            configMapKeyRef:
              name: music21-mcp-config
              key: OAUTH2_REFRESH_TOKEN_EXPIRE_DAYS
        
        # Session configuration
        - name: SESSION_TTL_MINUTES
          valueFrom:
            configMapKeyRef:
              name: music21-mcp-config
              key: SESSION_TTL_MINUTES
        
        # Secrets
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: music21-mcp-secrets
              key: jwt-secret
              optional: true
        
        volumeMounts:
        - name: data-volume
          mountPath: /app/data
        - name: logs-volume
          mountPath: /app/logs
        - name: tmp-volume
          mountPath: /tmp
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 12
        
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: music21-data-pvc
      - name: logs-volume
        emptyDir: {}
      - name: tmp-volume
        emptyDir: {}
      
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      
      # Pod affinity to spread across nodes
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - music21-mcp-server
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: music21-mcp-sa
  namespace: music21-mcp
  labels:
    app.kubernetes.io/name: music21-mcp-server
    app.kubernetes.io/component: serviceaccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: music21-mcp-role
  namespace: music21-mcp
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: music21-mcp-rolebinding
  namespace: music21-mcp
subjects:
- kind: ServiceAccount
  name: music21-mcp-sa
  namespace: music21-mcp
roleRef:
  kind: Role
  name: music21-mcp-role
  apiGroup: rbac.authorization.k8s.io