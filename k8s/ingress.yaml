apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: music21-mcp-ingress
  namespace: music21-mcp
  labels:
    app.kubernetes.io/name: music21-mcp-server
    app.kubernetes.io/component: ingress
  annotations:
    # Nginx ingress controller annotations
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
      add_header X-Frame-Options DENY always;
      add_header X-Content-Type-Options nosniff always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # CORS for OAuth2
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://yourdomain.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    
    # Cert-manager annotations (if using cert-manager)
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # AWS Load Balancer annotations (if using AWS ALB)
    # kubernetes.io/ingress.class: "alb"
    # alb.ingress.kubernetes.io/scheme: internet-facing
    # alb.ingress.kubernetes.io/target-type: ip
    # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:region:account:certificate/cert-id
    
    # GCP annotations (if using GCP)
    # kubernetes.io/ingress.class: "gce"
    # kubernetes.io/ingress.global-static-ip-name: "music21-mcp-ip"
spec:
  ingressClassName: nginx  # Adjust based on your ingress controller
  tls:
  - hosts:
    - music21-mcp.yourdomain.com  # Replace with your domain
    secretName: music21-mcp-tls
  rules:
  - host: music21-mcp.yourdomain.com  # Replace with your domain
    http:
      paths:
      # Health check endpoint
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: music21-mcp-service
            port:
              number: 8000
      
      # OAuth2 authentication endpoints
      - path: /auth
        pathType: Prefix
        backend:
          service:
            name: music21-mcp-service
            port:
              number: 8000
      
      # MCP API endpoints
      - path: /mcp
        pathType: Prefix
        backend:
          service:
            name: music21-mcp-service
            port:
              number: 8000
      
      # Root and other endpoints
      - path: /
        pathType: Prefix
        backend:
          service:
            name: music21-mcp-service
            port:
              number: 8000
---
# Alternative: Direct service exposure via LoadBalancer
apiVersion: v1
kind: Service
metadata:
  name: music21-mcp-loadbalancer
  namespace: music21-mcp
  labels:
    app.kubernetes.io/name: music21-mcp-server
    app.kubernetes.io/component: loadbalancer
  annotations:
    # AWS Load Balancer annotations
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:region:account:certificate/cert-id"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    
    # GCP Load Balancer annotations
    # cloud.google.com/neg: '{"ingress": true}'
    # cloud.google.com/backend-config: '{"ports": {"8000":"music21-mcp-backendconfig"}}'
    
    # Azure Load Balancer annotations
    # service.beta.kubernetes.io/azure-load-balancer-internal: "false"
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: music21-mcp-server
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  - port: 443
    targetPort: 8000
    protocol: TCP
    name: https
  # Preserve client source IP
  externalTrafficPolicy: Local