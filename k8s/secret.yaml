apiVersion: v1
kind: Secret
metadata:
  name: music21-mcp-secrets
  namespace: music21-mcp
  labels:
    app.kubernetes.io/name: music21-mcp-server
    app.kubernetes.io/component: secret
type: Opaque
data:
  # Base64 encoded values - replace with actual secrets
  # To generate: echo -n "your-secret" | base64
  
  # Redis password (if using auth)
  redis-password: ""  # Add your base64 encoded Redis password
  
  # JWT secret for token signing (generate a strong secret)
  jwt-secret: ""  # Add your base64 encoded JWT secret
  
  # OAuth2 client secrets for demo clients (optional)
  demo-client-secret: ""  # Add if needed
  
  # Database credentials (if using external DB)
  db-username: ""
  db-password: ""
  
  # API keys for external services
  external-api-key: ""
---
# Example TLS certificate secret
# In production, use cert-manager or similar for automatic certificate management
apiVersion: v1
kind: Secret
metadata:
  name: music21-mcp-tls
  namespace: music21-mcp
  labels:
    app.kubernetes.io/name: music21-mcp-server
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # Replace with your actual certificate and key (base64 encoded)
  tls.crt: ""  # Your certificate in base64
  tls.key: ""  # Your private key in base64
---
# Redis configuration
apiVersion: v1
kind: Secret
metadata:
  name: redis-config
  namespace: music21-mcp
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: config
type: Opaque
data:
  # Redis configuration with auth
  redis.conf: |
    # Redis configuration for production
    requirepass changeme123
    maxmemory 256mb
    maxmemory-policy allkeys-lru
    tcp-keepalive 60
    timeout 300
    
    # Persistence
    save 900 1
    save 300 10
    save 60 10000
    
    # Security
    protected-mode yes
    port 6379
    bind 0.0.0.0
    
    # Logging
    loglevel notice