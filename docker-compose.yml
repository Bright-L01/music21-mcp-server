version: '3.8'

services:
  music21-mcp:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    # MCP servers use stdio transport - no ports needed
    stdin_open: true
    tty: true
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - LOG_LEVEL=INFO
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    # Health check uses lightweight Python script
    healthcheck:
      test: ["CMD", "python", "/app/src/music21_mcp/health_check.py"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    volumes:
      - music21_data:/app/data
      - music21_logs:/app/logs
    networks:
      - music21_network

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - music21_network

  # MCP monitoring service (optional)
  mcp-monitor:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
    depends_on:
      - music21-mcp
      - redis
    command: ["python", "-c", "import time; import psutil; [print(f'Memory: {psutil.virtual_memory().percent}%') or time.sleep(60) for _ in iter(int, 1)]"]
    restart: unless-stopped
    volumes:
      - music21_logs:/app/logs
    networks:
      - music21_network

volumes:
  music21_data:
    driver: local
  music21_logs:
    driver: local
  redis_data:
    driver: local

networks:
  music21_network:
    driver: bridge