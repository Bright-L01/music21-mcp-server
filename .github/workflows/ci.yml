name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml', '**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest black mypy flake8 pytest-cov
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Format check with black
      run: |
        black --check src/ tests/ || true
    
    - name: Type check with mypy
      run: |
        mypy src/ --ignore-missing-imports || true
    
    - name: Test with pytest (Basic)
      run: |
        pytest tests/test_mcp_client.py -v
    
    - name: Test with pytest (Comprehensive)
      run: |
        python -c "import music21; print('music21 version:', music21.__version__)"
        python test_everything.py || true
    
    - name: Run example scripts
      run: |
        python examples/basic_usage.py || true
        python examples/complete_workflow.py || true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install bandit
      run: |
        pip install bandit[toml]
    
    - name: Run security scan
      run: |
        bandit -r src/ -f json -o bandit-report.json || true
      continue-on-error: true
    
    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: bandit-report
        path: bandit-report.json
      if: always()

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Check documentation
      run: |
        # Check that all referenced files exist
        test -f docs/getting-started.md || echo "⚠️ getting-started.md missing"
        test -f docs/architecture.md || echo "⚠️ architecture.md missing"
        test -f CONTRIBUTING.md || echo "⚠️ CONTRIBUTING.md missing"
        test -f examples/README.md || echo "⚠️ examples/README.md missing"
        
        # Check for broken internal links (basic check)
        grep -l "docs/" README.md && echo "✅ README links to docs" || true
        grep -l "examples/" README.md && echo "✅ README links to examples" || true
        
        echo "✅ Documentation check completed"

  build:
    runs-on: ubuntu-latest
    needs: [test, security, docs]
    if: success()
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Build package
      run: |
        pip install --upgrade pip build
        python -m build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Check if release needed
      id: check_release
      run: |
        echo "Checking if release is needed..."
        # Add release logic here if needed