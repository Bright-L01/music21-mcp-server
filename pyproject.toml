[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "music21-mcp-server"
version = "1.0.0"
description = "Enterprise-grade Model Context Protocol server for music analysis and composition"
authors = ["Bright Liu <brightliu@college.harvard.edu>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/brightlikethelight/music21-mcp-server"
repository = "https://github.com/brightlikethelight/music21-mcp-server"
documentation = "https://music21-mcp-server.readthedocs.io"
keywords = ["music", "analysis", "mcp", "music21", "composition"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio :: Analysis",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
packages = [{include = "music21_mcp", from = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
music21 = "^9.1.0"
numpy = "^1.24.0"
scipy = "^1.11.0"
matplotlib = "^3.7.0"
pillow = "^10.0.0"
pydantic = "^2.11.0"
aiofiles = "^23.0.0"
httpx = "^0.28.0"
cachetools = "^5.3.0"
python-dotenv = "^1.0.0"
# MCP uses stdio transport, no HTTP server needed
psutil = "^5.9.0"
mcp = "^1.4.0"
redis = {version = "^5.0.0", optional = true}
prometheus-client = {version = "^0.19.0", optional = true}

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
pytest-xdist = "^3.5.0"
pytest-benchmark = "^4.0.0"
memory-profiler = "^0.61.0"
black = "^23.12.0"
ruff = "^0.1.0"
mypy = "^1.8.0"
types-redis = "^4.6.0"
types-psutil = "^5.9.0"
pre-commit = "^3.6.0"
sphinx = "^7.2.0"
sphinx-rtd-theme = "^2.0.0"

[tool.poetry.group.audio]
optional = true

[tool.poetry.group.audio.dependencies]
pydub = "^0.25.0"
simpleaudio = "^1.0.4"
soundfile = "^0.12.0"

[tool.poetry.group.visualization]
optional = true

[tool.poetry.group.visualization.dependencies]
plotly = "^5.17.0"
seaborn = "^0.12.0"

[tool.poetry.extras]
redis = ["redis"]
monitoring = ["prometheus-client"]
all = ["redis", "prometheus-client"]

[tool.poetry.scripts]
music21-mcp = "music21_mcp.server:main"
music21-mcp-remote = "music21_mcp.server_remote:main"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/brightlikethelight/music21-mcp-server/issues"

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py310"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "RET", # flake8-return
]
ignore = ["E501", "B008", "C901", "W191"]

[tool.ruff.per-file-ignores]
"tests/*" = ["T20"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.isort]
profile = "black"
line_length = 88

[[tool.mypy.overrides]]
module = "music21.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "mcp.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=music21_mcp",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=85",
    "-n=auto",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
branch = true
source = ["src/music21_mcp"]
omit = [
    "*/tests/*",
    "*/__init__.py",
    "*/cli.py",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]